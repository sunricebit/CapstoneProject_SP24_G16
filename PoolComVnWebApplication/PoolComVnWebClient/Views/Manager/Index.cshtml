@{
    Layout = "~/Views/Shared/_TournamentLayout.cshtml";
}
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@using PoolComVnWebClient.DTO;
@model ManagerDTO;
@{
    string email = HttpContextAccessor.HttpContext.Request.Cookies["Email"];
}
<div class="container-full">
    <div class="news-manage">
        <div class="manage-account d-flex">
            <button class="manager-account account active">Quản lí</button>
            <button class="club-account account mx-2">Tài khoản Câu lạc bộ</button>
            <button class="user-account account mx-2">Tài khoản thường</button>
        </div>

        <!-- Manager account Start-->
        <div class="manager-content">
            <div class="mt-5 d-flex justify-content-between">
                <a href="@Url.Action("CreateManageAccount", "Manager")" class="addBtn-account d-flex justify-content-center align-items-center m-0">
                    Tạo tài khoản
                    <i class="fa-solid fa-user-plus px-3"></i>
                </a>
                <div class="manageSearch d-flex">
                    <input class="news-input" placeholder="Tên, địa chỉ,..." />
                    <div class="searchBtn px-3 align-items-center">
                        <i class="fa-solid fa-magnifying-glass"></i>
                    </div>
                </div>
            </div>
            <div class="manage-body mt-3">
                <table>
                    <tr>
                        <th class="news-id">#</th>
@*                         <th class="text-center">Ảnh</th>*@                        
                        <th class="update-date">Email đăng kí</th>
                        <th class="text-center w150">Số điện thoại</th>
                        <th class="text-center w150">Loại tài khoản</th>
                        <th class="text-center account-status w150">
                            Trạng thái
                            <i class="fa-solid fa-caret-down fa-flip"></i>
                            <ul class="type-list">
                                <li>Hoạt động</li>
                                <li>Khóa</li>
                            </ul>
                        </th>
                        <th class="w100 text-center">Hành động</th>
                    </tr>
                    @foreach (var account in Model.PaginatedManagerAccounts.Items)
                    {
                        <tr>
                            <td>@account.AccountID</td>
                            @* <td>
                                <div class="img-frame-account">
                                    <img src="@account" />
                                </div>
                            </td> *@
                            <td>@account.Email</td>
                            <td class="text-center">@account.PhoneNumber</td>
                            <td class="text-center">
                                @{
                                    string role = "";
                                    if (account.RoleID == 1)
                                    {
                                        role = "Admin";
                                    }
                                    else if (account.RoleID == 2)
                                    {
                                        role = "User";
                                    }
                                    else if (account.RoleID == 3)
                                    {
                                        role = "Business";
                                    }
                                    else
                                    {
                                        role = "Manager";
                                    }
                                }
                                @role
                            </td>
                            <td class="status">
                                @if (account.Status)
                                {
                                    <div class="user-status isActive">Hoạt động</div>
                                }
                                else
                                {
                                    <div class="user-status isUnActive">Khóa</div>
                                }
                            </td>
                            <td class="text-center">
                                @if(account.Email == email){
                                    <div>Your Account</div>
                                }
                                else
                                {
                                    @if (account.Status)
                                    {
                                        <a href="#"><i class="ban-btn fa-solid fa-lock p-2"></i></a>
                                    }
                                    else
                                    {
                                        <a href="#"><i class="ban-btn fa-solid fa-lock-open p-2"></i></a>
                                    }
                                }

                            </td>
                        </tr>
                    }
                </table>
               
            </div>
            @{
                // Định nghĩa ngưỡng cần hiển thị dấu "..."
                int threshold = 1;

                // Tính toán danh sách phân trang cần hiển thị
                List<int> displayedPages = new List<int>();
                bool showLeadingDots = false;
                bool showTrailingDots = false;

                for (int pageNum = 1; pageNum <= Model.PaginatedManagerAccounts.TotalPages; pageNum++)
                {
                    if (pageNum == 1 || pageNum == Model.PaginatedManagerAccounts.TotalPages || Math.Abs(pageNum - Model.PaginatedManagerAccounts.PageIndex) <= threshold)
                    {
                        displayedPages.Add(pageNum);
                    }
                    else if (pageNum < Model.PaginatedManagerAccounts.PageIndex - threshold && !showLeadingDots)
                    {
                        displayedPages.Add(-1); // Placeholder for leading dots
                        showLeadingDots = true;
                    }
                    else if (pageNum > Model.PaginatedManagerAccounts.PageIndex + threshold && !showTrailingDots)
                    {
                        displayedPages.Add(-1); // Placeholder for trailing dots
                        showTrailingDots = true;
                    }
                }

                // Hàm JavaScript để chuyển đến trang
                string goToPageFunction = "goToPage";

                // Định dạng mã HTML cho phân trang
                <div class="pagination d-flex justify-content-center align-items-center m-0">
                    <div class="pagination-content d-flex justify-content-center align-items-center m-0">
                        <div class="pagination-btn-big" onclick="prevPage()">Trước</div>
                        @foreach (int pageNum in displayedPages)
                        {
                            if (pageNum == -1)
                            {
                                <div class="pagination-more">...</div>
                            }
                            else
                            {
                                <div class="pagination-btn @(pageNum == Model.PaginatedManagerAccounts.PageIndex ? "active" : "")" onclick="@($"{goToPageFunction}({pageNum}, '{@ViewBag.SearchQuery}')")">@pageNum</div>
                            }
                        }
                        <div class="pagination-btn-big" onclick="nextPage()">Sau</div>
                    </div>
                </div>
            }
        </div>
        <!-- Manager account End-->
        <!-- Club account Start-->
        <div class="club-content d-none">
            <div class="mt-5 d-flex justify-content-end">
                <div class="manageSearch d-flex">
                    <input class="news-input" placeholder="Tên, địa chỉ,..." />
                    <div class="searchBtn px-3 align-items-center">
                        <i class="fa-solid fa-magnifying-glass"></i>
                    </div>
                </div>
            </div>
            <div class="manage-body mt-3">
                <table>
                    <tr>
                        <th class="news-id">#</th>
                        <th class="text-center">Ảnh</th>
                        <th class="w150">Tên câu lạc bộ</th>
                        <th class="w150">Email đăng kí</th>
                        <th class="text-center w150">Số điện thoại</th>
                        <th class="text-center w200">Địa chỉ</th>
                        <th class="text-center w150">Loại tài khoản</th>
                        <th class="text-center account-status w150">
                            Trạng thái
                            <i class="fa-solid fa-caret-down fa-flip"></i>
                            <ul class="type-list w150">
                                <li>Hoạt động</li>
                                <li>Khóa</li>
                            </ul>
                        </th>
                        <th class="text-center w100">Hành động</th>
                    </tr>
                    @foreach (var club in Model.PaginatedClubAccounts.Items)
                    {
                        <tr>
                            <td>@club.ClubId</td>
                            <td>
                                <div class="img-frame-account" style="background-image:url('@club.Avatar')"></div>
                            </td>
                            <td>@club.ClubName</td>
                            <td>@club.AccountEmail</td>
                            <td class="text-center">@club.Phone</td>
                            <td class="text-center">@club.Address</td>
                            <td class="text-center">Câu lạc bộ</td>
                            <td class="status">
                                @if (club.Status == 1)
                                {
                                    <div class="user-status isActive">Hoạt động</div>
                                }
                                else
                                {
                                    <div class="user-status isUnActive">Khóa</div>
                                }
                            </td>
                            <td class="text-center">
                                @if (club.Status ==0)
                                {
                                    <a href="#"><i class="ban-btn fa-solid fa-lock p-2"></i></a>
                                }
                                else
                                {
                                    <a href="#"><i class="ban-btn fa-solid fa-lock-open p-2"></i></a>
                                }
                            </td>
                        </tr>
                    }
                </table>
            </div>
            @{
                // Định nghĩa ngưỡng cần hiển thị dấu "..."
                int thresholdClub = 1;

                // Tính toán danh sách phân trang cần hiển thị
                List<int> displayedPagesClub = new List<int>();
                bool showLeadingDotsClub = false;
                bool showTrailingDotsClub = false;

                for (int pageNum = 1; pageNum <= Model.PaginatedClubAccounts.TotalPages; pageNum++)
                {
                    if (pageNum == 1 || pageNum == Model.PaginatedClubAccounts.TotalPages || Math.Abs(pageNum - Model.PaginatedClubAccounts.PageIndex) <= thresholdClub)
                    {
                        displayedPagesClub.Add(pageNum);
                    }
                    else if (pageNum < Model.PaginatedClubAccounts.PageIndex - thresholdClub && !showLeadingDotsClub)
                    {
                        displayedPagesClub.Add(-1); // Placeholder for leading dots
                        showLeadingDotsClub = true;
                    }
                    else if (pageNum > Model.PaginatedClubAccounts.PageIndex + thresholdClub && !showTrailingDotsClub)
                    {
                        displayedPagesClub.Add(-1); // Placeholder for trailing dots
                        showTrailingDotsClub = true;
                    }
                }

                // Hàm JavaScript để chuyển đến trang
                string goToPageFunctionClub = "goToClubPage";

                // Định dạng mã HTML cho phân trang
                <div class="pagination d-flex justify-content-center align-items-center m-0">
                    <div class="pagination-content d-flex justify-content-center align-items-center m-0">
                        <div class="pagination-btn-big" onclick="prevClubPage()">Trước</div>
                        @foreach (int pageNum in displayedPagesClub)
                        {
                            if (pageNum == -1)
                            {
                                <div class="pagination-more">...</div>
                            }
                            else
                            {
                                <div class="pagination-btn @(pageNum == Model.PaginatedClubAccounts.PageIndex ? "active" : "")" onclick="@($"{goToPageFunctionClub}({pageNum}, '{@ViewBag.SearchQuery}')")">@pageNum</div>
                            }
                        }
                        <div class="pagination-btn-big" onclick="nextClubPage()">Sau</div>
                    </div>
                </div>
            }
        </div>
        <!-- Club account End-->
        <!-- User account Start-->
        <div class="user-content d-none">
            <div class="mt-5 d-flex justify-content-end">
                <div class="manageSearch d-flex">
                    <input class="news-input" placeholder="Tên, địa chỉ,..." />
                    <div class="searchBtn px-3 align-items-center">
                        <i class="fa-solid fa-magnifying-glass"></i>
                    </div>
                </div>
            </div>
            <div class="manage-body mt-3">
                <table>
                    <tr>
                        <th class="news-id">#</th>
                        <th class="text-center">Ảnh</th>
                        <th class="w150">Tên</th>
                        <th class="w150">Email đăng kí</th>
                        <th class="text-center w150">Số điện thoại</th>
                        <th class="text-center w150">Địa chỉ</th>
                        <th class="text-center account-status w150">
                            Trạng thái
                            <i class="fa-solid fa-caret-down fa-flip"></i>
                            <ul class="type-list w150">
                                <li>Hoạt động</li>
                                <li>Khóa</li>
                            </ul>
                        </th>
                        <th class="text-center w100">Hành động</th>
                    </tr>
                    @foreach (var user in Model.PaginatedUserAccounts.Items)
                    {
                        <tr>
                            <td>@user.UserId</td>
                            <td>
                                <div class="img-frame-account" style="background-image:url('@user.Avatar')"></div>
                            </td>
                            <td>@user.FullName</td>
                            <td>@user.AccountEmail</td>
                            <td class="text-center">@user.PhoneNumber</td>
                            <td class="text-center">@user.Address</td>
                            <td class="status">
                                @if (user.Status)
                                {
                                    <div class="user-status isActive">Hoạt động</div>
                                }
                                else
                                {
                                    <div class="user-status isUnActive">Khóa</div>
                                }
                            </td>
                            <td class="text-center">
                                @if (user.Status)
                                {
                                    <a href="#"><i class="ban-btn fa-solid fa-lock p-2"></i></a>
                                }
                                else
                                {
                                    <a href="#"><i class="ban-btn fa-solid fa-lock-open p-2"></i></a>
                                }
                            </td>
                        </tr>
                    }
                </table>
            </div>
            <!-- Pagination -->
            @{
                // Định nghĩa ngưỡng cần hiển thị dấu "..."
                int thresholdUser = 1;

                // Tính toán danh sách phân trang cần hiển thị
                List<int> displayedPagesUser = new List<int>();
                bool showLeadingDotsUser = false;
                bool showTrailingDotsUser = false;

                for (int pageNum = 1; pageNum <= Model.PaginatedUserAccounts.TotalPages; pageNum++)
                {
                    if (pageNum == 1 || pageNum == Model.PaginatedUserAccounts.TotalPages || Math.Abs(pageNum - Model.PaginatedUserAccounts.PageIndex) <= thresholdUser)
                    {
                        displayedPagesUser.Add(pageNum);
                    }
                    else if (pageNum < Model.PaginatedUserAccounts.PageIndex - thresholdUser && !showLeadingDotsUser)
                    {
                        displayedPagesUser.Add(-1); // Placeholder for leading dots
                        showLeadingDotsUser = true;
                    }
                    else if (pageNum > Model.PaginatedUserAccounts.PageIndex + thresholdUser && !showTrailingDotsUser)
                    {
                        displayedPagesUser.Add(-1); // Placeholder for trailing dots
                        showTrailingDotsUser = true;
                    }
                }

                // Hàm JavaScript để chuyển đến trang
                string goToPageFunctionUser = "goToUserPage";

                // Định dạng mã HTML cho phân trang
                <div class="pagination d-flex justify-content-center align-items-center m-0">
                    <div class="pagination-content d-flex justify-content-center align-items-center m-0">
                        <div class="pagination-btn-big" onclick="prevUserPage()">Trước</div>
                        @foreach (int pageNum in displayedPagesUser)
                        {
                            if (pageNum == -1)
                            {
                                <div class="pagination-more">...</div>
                            }
                            else
                            {
                                <div class="pagination-btn @(pageNum == Model.PaginatedUserAccounts.PageIndex ? "active" : "")" onclick="@($"{goToPageFunctionUser}({pageNum}, '{@ViewBag.SearchQuery}')")">@pageNum</div>
                            }
                        }
                        <div class="pagination-btn-big" onclick="nextUserPage()">Sau</div>
                    </div>
                </div>
            }
        </div>
        <!-- User account End -->
    </div>

</div>

<script>
    //Handle ban btn
    const banBtnList = document.querySelectorAll('.ban-btn');
    banBtnList.forEach(btn => {
        btn.addEventListener('click', (e) => {
            e.preventDefault();
            if (btn.classList.contains('fa-lock-open')) {
                btn.classList.remove('fa-lock-open');
                btn.classList.add('fa-lock');
                const trParent = btn.parentNode.parentNode.parentNode;
                const userStatus = trParent.querySelector('.user-status');
                userStatus.classList.add('isActive');
                userStatus.classList.remove('isUnActive');
                userStatus.textContent = 'Hoạt động';
            } else {
                btn.classList.add('fa-lock-open');
                btn.classList.remove('fa-lock');
                const trParent = btn.parentNode.parentNode.parentNode;
                const userStatus = trParent.querySelector('.user-status');
                userStatus.classList.remove('isActive');
                userStatus.classList.add('isUnActive');
                userStatus.textContent = 'Khóa';
            }
        })
    })

    //Handle click nav
    const accountTypeBtnList = document.querySelectorAll('.account');
    accountTypeBtnList.forEach(accountTypeBtn => {
        accountTypeBtn.addEventListener('click', () => {
            accountTypeBtnList.forEach(btn => {
                btn.classList.remove('active');
            })
            accountTypeBtn.classList.add('active');
        })
    })

    //Handle each btn on nav
    const managerAcc = document.querySelector('.manager-account');
    const clubAcc = document.querySelector('.club-account');
    const userAcc = document.querySelector('.user-account');

    const managerContent = document.querySelector('.manager-content');
    const clubContent = document.querySelector('.club-content');
    const userContent = document.querySelector('.user-content');

    managerAcc.addEventListener('click', () => {
        offActiveBtn();
        managerContent.classList.remove('d-none');
    });

    clubAcc.addEventListener('click', () => {
        offActiveBtn();
        clubContent.classList.remove('d-none');
    });

    userAcc.addEventListener('click', () => {
        offActiveBtn();
        userContent.classList.remove('d-none');
    });


    function offActiveBtn() {
        if (!managerContent.classList.contains('d-none')) {
            managerContent.classList.add('d-none');
        }
        if (!clubContent.classList.contains('d-none')) {
            clubContent.classList.add('d-none');
        }
        if (!userContent.classList.contains('d-none')) {
            userContent.classList.add('d-none');
        }
    }

    var currentPageManager = @Model.PaginatedManagerAccounts.PageIndex;
    var currentPageClub = @Model.PaginatedClubAccounts.PageIndex;
    var currentPageUser = @Model.PaginatedUserAccounts.PageIndex;

    //phân trang quản lý
    function prevPage() {
        var searchQuery = '@ViewBag.SearchQuery';
        if (currentPageManager > 1) {
            goToPage(currentPageManager - 1, searchQuery);
        }
    }

    function nextPage() {
        var totalPages = @Model.PaginatedManagerAccounts.TotalPages;
        var searchQuery = '@ViewBag.SearchQuery';
        if (currentPageManager < totalPages) {
            goToPage(currentPageManager + 1, searchQuery);
        }
    }


    function goToPage(pageNum, searchQuery) {
        var url = '@Url.Action("Index", "Manager")';
        url += '?page=' + pageNum;
        if (searchQuery) {
            url += '&searchQuery=' + searchQuery;
        }
        window.location.href = url;
    }

    //phân trang club
    function prevClubPage() {
        var searchQuery = '@ViewBag.SearchQuery';
        if (currentPageClub > 1) {
            goToPage(currentPageClub - 1, searchQuery);
        }
    }

    function nextClubPage() {
        var totalPages = @Model.PaginatedClubAccounts.TotalPages;
        var searchQuery = '@ViewBag.SearchQuery';
        if (currentPageClub < totalPages) {
            goToPage(currentPageClub + 1, searchQuery);
        }
    }


    function goToClubPage(pageNum, searchQuery) {
        var url = '@Url.Action("Index", "Manager")';
        url += '?page=' + pageNum;
        if (searchQuery) {
            url += '&searchQuery=' + searchQuery;
        }
        window.location.href = url;
    }


    // phân trang user
    function prevUserPage() {
        var searchQuery = '@ViewBag.SearchQuery';
        if (currentPageUser > 1) {
            goToUserPage(currentPageUser - 1, searchQuery);
        }
    }

    function nextUserPage() {
        var totalPages = @Model.PaginatedUserAccounts.TotalPages;
        var searchQuery = '@ViewBag.SearchQuery';
        if (currentPageUser < totalPages) {
            goToUserPage(currentPageUser + 1, searchQuery);
        }
    }

    function goToUserPage(pageNum, searchQuery) {
        var url = '@Url.Action("Index", "Manager")';
        url += '?page=' + pageNum;
        if (searchQuery) {
            url += '&searchQuery=' + searchQuery;
        }
        window.location.href = url;
    }

</script>