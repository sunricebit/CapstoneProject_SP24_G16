@{
    Layout = "~/Views/Shared/_TournamentLayout.cshtml";
    int tourId = ViewBag.TourId;
    int maxNumberOfTournament = ViewBag.MaxNumberOfTournament;
    int knockOutNumber = ViewBag.KnockOutNumber;
}
<div class="numberOfPlayer d-none">@maxNumberOfTournament</div>
<div class="knockOutNumber d-none">@knockOutNumber</div>
<div class="tourId d-none">@tourId</div>

<div class="container-bracket d-flex">
    <div class="start-tour">
        <div>
            <div class="start-logo">
                <img src="Image/logo.png" alt="">
            </div>
            <div class="start-title">
                <!-- Hãy bắt đầu giải của bạn để dữ liệu được hiển thị đến người theo dõi. -->
                Dữ liệu chưa được gửi đến người theo dõi.<br>Hãy bắt đầu giải đấu.
            </div>
            <div class="d-flex justify-content-center">
                <div class="start-btn">Bắt đầu giải đấu</div>
            </div>
        </div>
    </div>
    <div class="bracket-tab">
        <div class="bracket-content d-flex">
            <div id="loser-match-body"></div>
            <div id="winer-match-body"></div>
        </div>
    </div>
    <div class="zoom-btns">
        <div class="screen-size">
            <button class="zoom-in" onclick="fullScreen()">
                <i class="fa-solid fa-expand"></i>
            </button>
        </div>
        <div>
            <button class="zoom-in" onclick="zoomIn()">
                <i class="fa-solid fa-plus"></i>
            </button>
        </div>
        <div>
            <button class="zoom-out" onclick="zoomOut()">
                <i class="fa-solid fa-minus"></i>
            </button>
        </div>
    </div>
    <div class="start-display d-flex justify-content-center align-items-center d-none">
        <div class="start-content">
            <div class="start-header d-flex justify-content-end">
                <div class="start-close">
                    <i class="fa-solid fa-xmark"></i>
                </div>
            </div>
            <div class="start-title">Dữ liệu giải đấu sẽ được hiển thị với người theo dõi.</div>
            <div class="d-flex justify-content-around">
                <div class="cancle-start text-center">Hủy</div>
                <div class="ok-start text-center">Bắt đầu</div>
            </div>
        </div>
    </div>
</div>
<div class="match-display d-flex justify-content-center align-items-center">
    <div class="match-detail ">
        <div class="match-header d-flex justify-content-between">
            <div class="match-title">
                <span>Trận 15</span>
                <span>(W1-1)</span>
                <span>Chạm <span id="race-to">7</span></span>
            </div>
            <div class="match-close">
                <i class="fa-solid fa-xmark"></i>
            </div>
        </div>
        <div class="details-body">
            <div class="d-flex justify-content-between">
                <div class="match-time m-0 mb-3">
                    <span>13:20</span>
                    <span> - 14:20</span>
                    <span>22/02/2024</span>
                </div>
                <div class="match-complete m-0 mb-3">Đang chơi</div>
            </div>
            <div class="edit-score">
                <div class="player-score first">
                    <div class="player-header" style="width: 200px;">
                        Nguời chơi
                    </div>
                    <div class="player-header text-center playing-element" style="width: 120px;">
                        Điểm
                    </div>
                    <div class="player-header text-center playing-element" style="width: 120px;">
                        Trạng thái
                    </div>
                </div>
                <div class="player-score detail mt-2">
                    <div class="player-name">
                        <img src="/Image/VietNamFlag.png" alt="">
                        <span>Nam Vu Doan Thu</span>
                    </div>
                    <div class="player-point playing-element">
                        <div class="point-view-bg first-player">
                            <div id="first-down-btn" class="control-btn point-minus down">-</div>
                            <span class="point-view first">3</span>
                            <div class="control-btn point-plus up">+</div>
                        </div>
                    </div>
                    <div class="player-status playing-element">
                        <select>
                            <option value="0">Không</option>
                            <option value="1">Bỏ giải</option>
                            <option value="2">Bỏ trận</option>
                        </select>
                    </div>
                </div>
                <div class="player-score detail mt-2">
                    <div class="player-name">
                        <img src="/Image/VietNamFlag.png" alt="">
                        <span>Nam Vu Doan Thu</span>
                    </div>
                    <div class="player-point playing-element">
                        <div class="point-view-bg second-player">
                            <div id="second-down-btn" class="control-btn point-minus down">-</div>
                            <span class="point-view second">2</span>
                            <div class="control-btn point-plus up">+</div>
                        </div>
                    </div>
                    <div class="player-status playing-element">
                        <select>
                            <option value="0">Không</option>
                            <option value="1">Bỏ giải</option>
                            <option value="2">Bỏ trận</option>
                        </select>
                    </div>
                </div>
            </div>

            <div class="edit-table mt-4 d-flex">
                <div>
                    <div class="d-flex align-items-center">
                        <div class="table-header">Mở bàn</div>
                        <div class="table-name open-table">
                            Chọn bàn
                            <!-- <div class="search-box">
                                <input type="text">
                                <div class="player-name">
                                    <span>Bàn 1</span>
                                </div>
                                <div class="player-name">
                                    <span>Bàn 2</span>
                                </div>
                                <div class="player-name">
                                    <span>Bàn 3</span>
                                </div>
                            </div> -->
                        </div>
                        <!-- <div class="cancle-table open">
                            <i class="fa-solid fa-xmark"></i>
                        </div> -->
                    </div>
                    <div>
                        <div class="d-flex align-items-center" style="margin-top: 10px;">
                            <div class="table-header">Lên lịch bàn</div>
                            <div class="table-name schedule-table">
                                Chọn bàn
                            </div>
                        </div>
                        <div class="d-flex align-items-center" style="margin-top: 10px;">
                            <div class="table-header">Thời gian dự kiến</div>
                            <div class="schedule-datetime">
                                <input class="schedule-time" type="datetime-local">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="d-flex justify-content-center">
                <div class="save-btn">
                    Lưu
                </div>
                <div class="start-match-btn">
                    Bắt đầu
                </div>
            </div>
            <div class="details-next d-flex justify-content-around">
                <div class="lose-next row">
                    <div class="col-3">
                        <i class="fa-solid fa-angles-left"></i>
                    </div>
                    <div class="text-center col-9 px-0" onclick="scrollToElement(15)">Thua (222)</div>
                </div>
                <div class="win-next row">
                    <div class="text-center col-9 px-0" onclick="scrollToElement(12)">Thắng (123)</div>
                    <div class="col-3">
                        <i class="fa-solid fa-angles-right"></i>
                    </div>
                </div>
            </div>
            <div class="score-board d-flex align-items-end playing-element">
                <div class="name-board">
                    <div class="board-line"><span>Nam Vũ</span></div>
                    <div><span>Quảng Vũ</span></div>
                </div>
                <div class="general-score">
                    <div class="board-line px-2"><span>Điểm</span></div>
                    <div class="text-center board-line"><span class="first-total-score">0</span></div>
                    <div class="text-center"><span class="second-total-score">0</span></div>
                </div>
                <div id="set-1" class="detail-score">
                    <div class="round-score board-line"><span>1</span></div>
                    <div class="board-line first-mark"><span><i class="fa-solid fa-xmark"></i></span></div>
                    <div class="second-mark"><span>&nbsp;</span></div>
                </div>
                <div id="set-2" class="detail-score">
                    <div class="round-score board-line"><span>2</span></div>
                    <div class="board-line first-mark"><span>&nbsp;</span></div>
                    <div class="second-mark"><span><i class="fa-solid fa-xmark"></i></span></div>
                </div>
                <div id="set-3" class="detail-score">
                    <div class="round-score board-line"><span>3</span></div>
                    <div class="board-line first-mark"><span><i class="fa-solid fa-xmark"></i></span></div>
                    <div class="second-mark"><span>&nbsp;</span></div>
                </div>
                <div id="set-4" class="detail-score">
                    <div class="round-score board-line"><span>4</span></div>
                    <div class="board-line first-mark"><span><i class="fa-solid fa-xmark"></i></span></div>
                    <div class="second-mark"><span>&nbsp;</span></div>
                </div>
                <div id="set-5" class="detail-score">
                    <div class="round-score board-line"><span>5</span></div>
                    <div class="board-line first-mark"><span>&nbsp;</span></div>
                    <div class="second-mark"><span><i class="fa-solid fa-xmark"></i></span></div>
                </div>
                <div id="set-6" class="detail-score">
                    <div class="round-score board-line"><span>6</span></div>
                    <div class="board-line first-mark"><span>&nbsp;</i></span></div>
                    <div class="second-mark"><span>&nbsp;</span></div>
                </div>
                <div id="set-7" class="detail-score">
                    <div class="round-score board-line"><span>7</span></div>
                    <div class="board-line first-mark"><span>&nbsp;</i></span></div>
                    <div class="second-mark"><span>&nbsp;</span></div>
                </div>
                <div id="set-8" class="detail-score">
                    <div class="round-score board-line"><span>8</span></div>
                    <div class="board-line first-mark"><span>&nbsp;</i></span></div>
                    <div class="second-mark"><span>&nbsp;</span></div>
                </div>
                <div id="set-9" class="detail-score">
                    <div class="round-score board-line"><span>9</span></div>
                    <div class="board-line first-mark"><span>&nbsp;</i></span></div>
                    <div class="second-mark"><span>&nbsp;</span></div>
                </div>
                <div id="set-10" class="detail-score">
                    <div class="round-score board-line"><span>10</span></div>
                    <div class="board-line first-mark"><span>&nbsp;</i></span></div>
                    <div class="second-mark"><span>&nbsp;</span></div>
                </div>
                <div id="set-11" class="detail-score">
                    <div class="round-score board-line"><span>11</span></div>
                    <div class="board-line first-mark"><span>&nbsp;</i></span></div>
                    <div class="second-mark"><span>&nbsp;</span></div>
                </div>
                <div id="set-12" class="detail-score">
                    <div class="round-score board-line"><span>12</span></div>
                    <div class="board-line first-mark"><span>&nbsp;</i></span></div>
                    <div class="second-mark"><span>&nbsp;</span></div>
                </div>
                <div id="set-13" class="detail-score">
                    <div class="round-score board-line"><span>13</span></div>
                    <div class="board-line first-mark"><span>&nbsp;</i></span></div>
                    <div class="second-mark"><span>&nbsp;</span></div>
                </div>
                <div id="set-14" class="detail-score">
                    <div class="round-score board-line"><span>14</span></div>
                    <div class="board-line first-mark"><span>&nbsp;</i></span></div>
                    <div class="second-mark"><span>&nbsp;</span></div>
                </div>
                <div id="set-15" class="detail-score">
                    <div class="round-score board-line"><span>15</span></div>
                    <div class="board-line first-mark"><span>&nbsp;</i></span></div>
                    <div class="second-mark"><span>&nbsp;</span></div>
                </div>
            </div>
            <div class="score-board d-flex align-items-end playing-element">
                <div class="name-board">
                    <div class="board-line"><span>Nam Vũ</span></div>
                    <div><span>Quảng Vũ</span></div>
                </div>
                <div class="general-score">
                    <div class="board-line px-2"><span>Điểm</span></div>
                    <div class="text-center board-line"><span class="first-total-score">6</span></div>
                    <div class="text-center"><span class="second-total-score">3</span></div>
                </div>
                <div id="set-16" class="detail-score">
                    <div class="round-score board-line"><span>1</span></div>
                    <div class="board-line first-mark"><span>&nbsp;</i></span></div>
                    <div class="second-mark"><span>&nbsp;</span></div>
                </div>
                <div id="set-17" class="detail-score">
                    <div class="round-score board-line"><span>2</span></div>
                    <div class="board-line first-mark"><span>&nbsp;</i></span></div>
                    <div class="second-mark"><span>&nbsp;</span></div>
                </div>
                <div id="set-18" class="detail-score">
                    <div class="round-score board-line"><span>3</span></div>
                    <div class="board-line first-mark"><span>&nbsp;</i></span></div>
                    <div class="second-mark"><span>&nbsp;</span></div>
                </div>
                <div id="set-19" class="detail-score">
                    <div class="round-score board-line"><span>4</span></div>
                    <div class="board-line first-mark"><span>&nbsp;</i></span></div>
                    <div class="second-mark"><span>&nbsp;</span></div>
                </div>
                <div id="set-20" class="detail-score">
                    <div class="round-score board-line"><span>5</span></div>
                    <div class="board-line first-mark"><span>&nbsp;</i></span></div>
                    <div class="second-mark"><span>&nbsp;</span></div>
                </div>
                <div id="set-21" class="detail-score">
                    <div class="round-score board-line"><span>6</span></div>
                    <div class="board-line first-mark"><span>&nbsp;</i></span></div>
                    <div class="second-mark"><span>&nbsp;</span></div>
                </div>
                <div id="set-22" class="detail-score">
                    <div class="round-score board-line"><span>7</span></div>
                    <div class="board-line first-mark"><span>&nbsp;</i></span></div>
                    <div class="second-mark"><span>&nbsp;</span></div>
                </div>
                <div id="set-23" class="detail-score">
                    <div class="round-score board-line"><span>8</span></div>
                    <div class="board-line first-mark"><span>&nbsp;</i></span></div>
                    <div class="second-mark"><span>&nbsp;</span></div>
                </div>
                <div id="set-24" class="detail-score">
                    <div class="round-score board-line"><span>9</span></div>
                    <div class="board-line first-mark"><span>&nbsp;</i></span></div>
                    <div class="second-mark"><span>&nbsp;</span></div>
                </div>
                <div id="set-25" class="detail-score">
                    <div class="round-score board-line"><span>10</span></div>
                    <div class="board-line first-mark"><span>&nbsp;</i></span></div>
                    <div class="second-mark"><span>&nbsp;</span></div>
                </div>
                <div id="set-26" class="detail-score">
                    <div class="round-score board-line"><span>11</span></div>
                    <div class="board-line first-mark"><span>&nbsp;</i></span></div>
                    <div class="second-mark"><span>&nbsp;</span></div>
                </div>
                <div id="set-27" class="detail-score">
                    <div class="round-score board-line"><span>12</span></div>
                    <div class="board-line first-mark"><span>&nbsp;</i></span></div>
                    <div class="second-mark"><span>&nbsp;</span></div>
                </div>
                <div id="set-28" class="detail-score">
                    <div class="round-score board-line"><span>13</span></div>
                    <div class="board-line first-mark"><span>&nbsp;</i></span></div>
                    <div class="second-mark"><span>&nbsp;</span></div>
                </div>
                <div id="set-29" class="detail-score">
                    <div class="round-score board-line"><span>14</span></div>
                    <div class="board-line first-mark"><span>&nbsp;</i></span></div>
                    <div class="second-mark"><span>&nbsp;</span></div>
                </div>
                <div id="set-30" class="detail-score">
                    <div class="round-score board-line"><span>15</span></div>
                    <div class="board-line first-mark"><span>&nbsp;</i></span></div>
                    <div class="second-mark"><span>&nbsp;</span></div>
                </div>
            </div>
        </div>
    </div>
</div>
    </div>
<div id="confirm-popup" class="confirm-popup d-none">
    <div class="confirm-content">
        <div class="confirm-title">
            Kết thúc trận đấu.
        </div>
        <div class="d-flex justify-content-around">
            <div class="exit-btn" style="width: 200px;">
                Hủy
            </div>
            <div class="save-random" style="width: 200px;">
                Kết thúc
            </div>
        </div>
    </div>
</div>

<script>
    const winMatchBody = document.getElementById('winer-match-body');
    //Số lượng người chơi tham gia giải
    // Gán giá trị cho playerNumber và finalSinglePlayer từ dữ liệu nhận được
    var playerNumber = $(".numberOfPlayer").text().trim();

    //Số vòng đấu nhánh thắng trước vòng chung kết
    //(tính theo đấu loại đơn)
    let roundNumber = Math.log2(playerNumber / 2);

    //Số người chơi vào vòng loại trực tiếp
    var finalSinglePlayer = $(".knockOutNumber").text().trim();

    //số vòng đấu nhánh thắng tính từ R2 -> R(cuối) vòng loại
    let finalSingleRound = roundNumber - Math.log2(finalSinglePlayer) + 1;
    //chiều rộng,cao của match
    var width = 250;
    var height = 60;
    // khoảng cách chiều ngang giữa 2 match
    var matchDistance = 30;
    var leftRightSpace = 100;
    let numberMatchEachRound = 0;
    let count = 0;
    var winBody = '';

    for (i = 0; i <= finalSingleRound; i++) {
        numberMatchEachRound = 2 ** (roundNumber - i);
        for (j = 0; j < numberMatchEachRound; j++) {
            if (i == 0) {
                ++count;
                winBody += '<div class="match-box done" id="match' + count + '" style=" top:' + (j * 2 * height) + 'px;width: ' + width + 'px; height: ' + height + 'px;">'
                    + '<div class="match-content row">'
                    + '<div class="match-number col-2 p-0 text-center">'
                    + count
                    + '</div>'
                    + '<div class="player-match col-8">'
                    + '<div class="d-flex justify-content-start align-items-center">'
                    + '<img src=""/>'
                    + '<!-- 15 char -->'
                    + '<div class="player1-name"></div>'
                    + '<div class="player1-id d-none"></div>'
                    + '</div>'
                    + '<div class="d-flex justify-content-start align-items-center">'
                    + '<img src=""/>'
                    + '<!-- 15 char -->'
                    + '<div class="player2-name"></div>'
                    + '<div class="player2-id d-none"></div>'
                    + '</div>'
                    + '</div>'
                    + '<div class="col-2">'
                    + '<div class="match-score player1-score"></div>'
                    + '<div class="match-score player2-score"></div>'
                    + '</div>'
                    + '<div class="match-table">Table <span class="table-number"></span></div>'
                    + '<div class="match-raceTo">Race to <span class="raceTo-number"></span></div>'
                    + '<div class="next-match d-flex">'
                    + '<div class="next-win">W: <span class="win-match-number"></span>,</div>'
                    + '<div class="next-lose">L: <span class="lose-match-number"></span></div>'
                    + '</div>'
                    + '</div>'
                    + '</div>'
            } else {
                ++count;
                winBody +=
                    '<div class="line" style="top: ' + (height * (((2 ** i - 1) / 2) + (2 ** (i + 1) * j))) + 'px; left:' + (width * i + matchDistance * (i - 1)) + 'px">'
                    + '<div class="left-line-win" style="width: ' + matchDistance / 2 + 'px; height: ' + ((2 ** i) * height) + 'px;"></div>'
                    + '<div class="right-line-win" style="width: ' + matchDistance / 2 + 'px; height: ' + ((2 ** i) * height / 2) + 'px;"></div>'
                    + '</div>'
                    + '<div class="match-box" id="match' + count + '" style="top:' + (height * ((2 ** i - 1) + 2 ** (i + 1) * j)) + 'px; left: ' + ((matchDistance + width) * i) + 'px;width: ' + width + 'px; height: ' + height + 'px;">'
                    + '<div class="match-content row">'
                    + '<div class="match-number col-2 p-0 text-center">'
                    + count
                    + '</div>'
                    + '<div class="player-match col-8">'
                    + '<div class="d-flex justify-content-start align-items-center">'
                    + '<img src=""/>'
                    + '<!-- 15 char -->'
                    + '<div class="player1-name"></div>'
                    + '<div class="player1-id d-none"></div>'
                    + '</div>'
                    + '<div class="d-flex justify-content-start align-items-center">'
                    + '<img src=""/>'
                    + '<!-- 15 char -->'
                    + '<div class="player2-name"></div>'
                    + '<div class="player2-id d-none"></div>'
                    + '</div>'
                    + '</div>'
                    + '<div class="col-2">'
                    + '<div class="match-score player1-score"></div>'
                    + '<div class="match-score player2-score"></div>'
                    + '</div>'
                    + '<div class="match-table">Table <span class="table-number"></span></div>'
                    + '<div class="match-raceTo">Race to <span class="raceTo-number"></span></div>'
                    + '<div class="next-match d-flex">'
                    + '<div class="next-win">W: <span class="win-match-number"></span>,</div>'
                    + '<div class="next-lose">L: <span class="lose-match-number"></span></div>'
                    + '</div>'
                    + '</div>'
                    + '</div>'
            }
        }
    }



    const loseMatchBody = document.getElementById('loser-match-body');
    var loseBody = '';
    for (i = 1; i <= finalSingleRound; i++) {
        numberMatchEachRound = 2 ** (roundNumber - i);
        for (j = 0; j < numberMatchEachRound; j++) {
            ++count;
            loseBody +=
                '<div class="line" style="top: ' + (height * (((2 ** i - 1) / 2) + (2 ** (i + 1) * j))) + 'px; right:' + ((i - 1) * (1.5 * matchDistance + 2 * width)) + 'px">'
                + '<div class="left-line-lose" style="width: ' + matchDistance / 2 + 'px; height: ' + ((2 ** i) * height / 2) + 'px;"></div>'
                + '<div class="right-line-lose" style="width: ' + matchDistance / 2 + 'px; height: ' + ((2 ** i) * height) + 'px;"></div>'
                + '</div>'
                + '<div class="match-box" id="match' + count + '" style="top:' + (height * ((2 ** i - 1) + 2 ** (i + 1) * j)) + 'px; right: ' + ((1.5 * i - 0.5) * matchDistance + 2 * (i - 1) * width) + 'px;width: ' + width + 'px; height: ' + height + 'px;">'
                + '<div class="match-content row">'
                + '<div class="match-number col-2 p-0 text-center">'
                + count
                + '</div>'
                + '<div class="player-match col-8">'
                + '<div class="d-flex justify-content-start align-items-center">'
                + '<img src=""/>'
                + '<!-- 15 char -->'
                + '<div class="player1-name"></div>'
                + '<div class="player1-id d-none"></div>'
                + '</div>'
                + '<div class="d-flex justify-content-start align-items-center">'
                + '<img src=""/>'
                + '<!-- 15 char -->'
                + '<div class="player2-name"></div>'
                + '<div class="player2-id d-none"></div>'
                + '</div>'
                + '</div>'
                + '<div class="col-2">'
                + '<div class="match-score player1-score"></div>'
                + '<div class="match-score player2-score"></div>'
                + '</div>'
                + '<div class="match-table">Table <span class="table-number"></span></div>'
                + '<div class="match-raceTo">Race to <span class="raceTo-number"></span></div>'
                + '<div class="next-match d-flex">'
                + '<div class="next-win">W: <span class="win-match-number"></span>,</div>'
                + '<div class="next-lose">L: <span class="lose-match-number"></span></div>'
                + '</div>'
                + '</div>'
                + '</div>'
        }
        for (j = 0; j < numberMatchEachRound; j++) {
            ++count;
            loseBody +=
                '<div class="between-line" style="top: ' + (height * (((2 ** i - 1) / 2) + (2 ** (i + 1) * j))) + 'px; right:' + ((1.5 * i - 0.5) * matchDistance + (2 * i - 1) * width) + 'px; width: ' + matchDistance / 2 + 'px; height: ' + ((2 ** i) * height / 2) + 'px;"></div>'
                + '<div class="match-box" id="match' + count + '" style="top: ' + (height * ((2 ** i - 1) + 2 ** (i + 1) * j)) + 'px; right: ' + ((matchDistance * 1.5 * i + width * (2 * i - 1))) + 'px;width: ' + width + 'px; height: ' + height + 'px;">'
                + '<div class="match-content row">'
                + '<div class="match-number col-2 p-0 text-center">'
                + count
                + '</div>'
                + '<div class="player-match col-8">'
                + '<div class="d-flex justify-content-start align-items-center">'
                + '<img src=""/>'
                + '<!-- 15 char -->'
                + '<div class="player1-name"></div>'
                + '<div class="player1-id d-none"></div>'
                + '</div>'
                + '<div class="d-flex justify-content-start align-items-center">'
                + '<img src=""/>'
                + '<!-- 15 char -->'
                + '<div class="player2-name"></div>'
                + '<div class="player2-id d-none"></div>'
                + '</div>'
                + '</div>'
                + '<div class="col-2">'
                + '<div class="match-score player1-score"></div>'
                + '<div class="match-score player2-score"></div>'
                + '</div>'
                + '<div class="match-table">Table <span class="table-number"></span></div>'
                + '<div class="match-raceTo">Race to <span class="raceTo-number"></span></div>'
                + '<div class="next-match d-flex">'
                + '<div class="next-win">W: <span class="win-match-number"></span>,</div>'
                + '<div class="next-lose">L: <span class="lose-match-number"></span></div>'
                + '</div>'
                + '</div>'
                + '</div>'
        }
    }
    loseMatchBody.innerHTML = loseBody;

    for (i = finalSingleRound; i <= roundNumber; i++) {
        numberMatchEachRound = 2 ** (roundNumber - i);
        if (i === finalSingleRound) {
            for (j = 0; j < numberMatchEachRound; j++) {
                ++count;
                winBody +=
                    '<div class="line" style="top: ' + (height * (((2 ** i - 1) / 2) + (2 ** (i + 1) * j))) + 'px; left:' + (width * (i + 1) + matchDistance * i) + 'px">'
                    + '<div class="right-line-win" style="width: ' + matchDistance / 2 + 'px; height: ' + ((2 ** i) * height / 2) + 'px;"></div>'
                    + '</div>'
                    + '<div class="match-box" id="match' + count + '" style="top:' + (height * ((2 ** i - 1) + 2 ** (i + 1) * j)) + 'px; left: ' + (matchDistance * (i + 0.5) + width * (i + 1)) + 'px;width: ' + width + 'px; height: ' + height + 'px;">'
                    + '<div class="match-content row">'
                    + '<div class="match-number col-2 p-0 text-center">'
                    + count
                    + '</div>'
                    + '<div class="player-match col-8">'
                    + '<div class="d-flex justify-content-start align-items-center">'
                    + '<img src=""/>'
                    + '<!-- 15 char -->'
                    + '<div class="player1-name"></div>'
                    + '<div class="player1-id d-none"></div>'
                    + '</div>'
                    + '<div class="d-flex justify-content-start align-items-center">'
                    + '<img src=""/>'
                    + '<!-- 15 char -->'
                    + '<div class="player2-name"></div>'
                    + '<div class="player2-id d-none"></div>'
                    + '</div>'
                    + '</div>'
                    + '<div class="col-2">'
                    + '<div class="match-score player1-score"></div>'
                    + '<div class="match-score player2-score"></div>'
                    + '</div>'
                    + '<div class="match-table">Table <span class="table-number"></span></div>'
                    + '<div class="match-raceTo">Race to <span class="raceTo-number"></span></div>'
                    + '<div class="next-match d-flex">'
                    + '<div class="next-win">W: <span class="win-match-number"></span>,</div>'
                    + '<div class="next-lose">L: <span class="lose-match-number"></span></div>'
                    + '</div>'
                    + '</div>'
                    + '</div>'
            }
        } else {
            for (j = 0; j < numberMatchEachRound; j++) {
                ++count;
                winBody +=
                    '<div class="line" style="top: ' + (height * (((2 ** i - 1) / 2) + (2 ** (i + 1) * j))) + 'px; left:' + (width * (i + 1) + matchDistance * (i - 0.5)) + 'px">'
                    + '<div class="left-line-win" style="width: ' + matchDistance / 2 + 'px; height: ' + ((2 ** i) * height) + 'px;"></div>'
                    + '<div class="right-line-win" style="width: ' + matchDistance / 2 + 'px; height: ' + ((2 ** i) * height / 2) + 'px;"></div>'
                    + '</div>'
                    + '<div class="match-box" id="match' + count + '" style="top:' + (height * ((2 ** i - 1) + 2 ** (i + 1) * j)) + 'px; left: ' + (matchDistance * (i + 0.5) + width * (i + 1)) + 'px;width: ' + width + 'px; height: ' + height + 'px;">'
                    + '<div class="match-content row">'
                    + '<div class="match-number col-2 p-0 text-center">'
                    + count
                    + '</div>'
                    + '<div class="player-match col-8">'
                    + '<div class="d-flex justify-content-start align-items-center">'
                    + '<img src=""/>'
                    + '<!-- 15 char -->'
                    + '<div class="player1-name"></div>'
                    + '<div class="player1-id d-none"></div>'
                    + '</div>'
                    + '<div class="d-flex justify-content-start align-items-center">'
                    + '<img src=""/>'
                    + '<!-- 15 char -->'
                    + '<div class="player2-name"></div>'
                    + '<div class="player2-id d-none"></div>'
                    + '</div>'
                    + '</div>'
                    + '<div class="col-2">'
                    + '<div class="match-score player1-score"></div>'
                    + '<div class="match-score player2-score"></div>'
                    + '</div>'
                    + '<div class="match-table">Table <span class="table-number"></span></div>'
                    + '<div class="match-raceTo">Race to <span class="raceTo-number"></span></div>'
                    + '<div class="next-match d-flex">'
                    + '<div class="next-win">W: <span class="win-match-number"></span>,</div>'
                    + '<div class="next-lose">L: <span class="lose-match-number"></span></div>'
                    + '</div>'
                    + '</div>'
                    + '</div>'
            }
        }

    }

    winMatchBody.innerHTML = winBody;

    const lastMatchHeight = document.getElementById('match' + playerNumber / 2);
    const matchTableElement = lastMatchHeight.querySelector('.match-raceTo');
    matchTableElement.style.paddingBottom = '200px';

    window.addEventListener('load', centerPosition);

    function centerPosition() {
        bracketTab.scrollLeft = loseMatchBody.offsetWidth - window.innerWidth / 2 + 125;
    }

    let currentZoom = 0.6;

    let winerWidth;
    let loserWidth;

    const bracketContent = document.querySelector('.bracket-content');
    const bracketTab = document.querySelector('.bracket-tab');
    const zoomInBtn = document.querySelector('.zoom-in');
    const zoomOutBtn = document.querySelector('.zoom-out');

    zoomInBtn.removeEventListener
    applyZoom();
    bindingData();
    function zoomIn() {
        if (currentZoom <= 1.5) {
            currentZoom += 0.1;
            applyZoom();
            zoomOutBtn.style.opacity = '1';
            zoomOutBtn.classList.remove('no-hover');
        } else {
            zoomInBtn.style.opacity = '0.3';
            zoomInBtn.classList.add('no-hover');
        }
    }

    function zoomOut() {
        if (currentZoom >= 0.4) {
            currentZoom -= 0.1;
            applyZoom();
            zoomInBtn.style.opacity = '1';
            zoomInBtn.classList.remove('no-hover');
        } else {
            zoomOutBtn.style.opacity = '0.3';
            zoomOutBtn.classList.add('no-hover');
        }
    }

    function applyZoom() {
        winerWidth = ((roundNumber + 2) * width + (roundNumber + 0.5) * matchDistance) * currentZoom + leftRightSpace;
        loserWidth = (finalSingleRound * (2 * width + 1.5 * matchDistance)) * currentZoom + leftRightSpace;
        winMatchBody.style.width = winerWidth + 'px';
        loseMatchBody.style.width = loserWidth + 'px';
        bracketContent.style.transform = `scale(${currentZoom})`;
        centerPosition();
    }

    const matchDisplay = document.querySelector('.match-display');
    function scrollToElement(elementId) {
        matchDisplay.classList.add('d-none');

        // Get the element to scroll to by its ID
        const elementToScrollTo = document.getElementById('match' + elementId);
        const elementRect = elementToScrollTo.getBoundingClientRect();
        const parentRect = bracketContent.getBoundingClientRect();

        let distanceToLeft = elementRect.x - parentRect.x - window.innerWidth / 2 + 125;
        let distanceToTop = elementRect.top - parentRect.top - window.innerHeight / 4;

        bracketTab.scrollTo({
            left: distanceToLeft,
            top: distanceToTop,
            behavior: 'smooth'
        });

        flashingBox(elementToScrollTo);
    }

    function flashingBox(element) {
        let count = 0;
        element.classList.add('flashing');
        const interval = setInterval(() => {
            if (count < 3) {
                if (element.classList.contains('flashing')) {
                    element.classList.remove('flashing');
                } else {
                    element.classList.add('flashing');
                    count++;
                }
            } else {
                clearInterval(interval);
            }
        }, 300);
        setTimeout(() => {
            element.classList.remove('flashing');
        }, 3500);
    }

    //Handle full screen
    const containerBracket = document.querySelector('.container-bracket');
    const header = document.querySelector('header');
    const screenSize = document.querySelector('.screen-size');
    const body = document.querySelector('body');

    function fullScreen() {
        containerBracket.classList.add('full-screen');
        screenSize.innerHTML = '<button class="zoom-in" onclick="minimized()">'
            + '<i class="fa-solid fa-compress"></i>'
            + '</button>';
        header.classList.add('d-none');

        if (body.requestFullscreen) {
            body.requestFullscreen();
        } else if (body.webkitRequestFullscreen) { /* Safari */
            body.webkitRequestFullscreen();
        } else if (body.msRequestFullscreen) { /* IE11 */
            body.msRequestFullscreen();
        }
    }

    function minimized() {
        containerBracket.classList.remove('full-screen');
        screenSize.innerHTML = '<button class="zoom-in" onclick="fullScreen()">'
            + '<i class="fa-solid fa-expand"></i>'
            + '</button>';
        header.classList.remove('d-none');

        if (document.exitFullscreen) {
            document.exitFullscreen();
        } else if (document.webkitExitFullscreen) { /* Safari */
            document.webkitExitFullscreen();
        } else if (document.msExitFullscreen) { /* IE11 */
            document.msExitFullscreen();
        }
    }

    //Handle click choose table
    const openTable = document.querySelector('.open-table');
    const scheduleTable = document.querySelector('.schedule-table');

    openTable.addEventListener('click', onOffSearchBox);
    scheduleTable.addEventListener('click', onOffSearchBox);

    function onOffSearchBox() {
        if (this.querySelector('.search-box') === null) {
            removeSearchBox();
            this.appendChild(createSearchBox());
            handleClickTable();
        } else {
            removeSearchBox();
        }
    }

    function createSearchBox() {
        var searchBox = document.createElement('div');
        searchBox.classList.add('search-box');

        var input = document.createElement('input');
        input.setAttribute('type', 'text');
        input.addEventListener('click', handleInput);
        searchBox.appendChild(input);

        for (var i = 0; i < 3; i++) {
            var playerContainer = document.createElement('div');
            playerContainer.classList.add('player-name');

            var span = document.createElement('span');
            span.textContent = 'Bàn' + (i + 1);
            playerContainer.appendChild(span);

            searchBox.appendChild(playerContainer);
            searchBox.addEventListener('click', (e) => {
                e.stopPropagation();
                removeSearchBox();
            })
        }
        return searchBox;
    }

    //Handle input
    function handleInput(e) {
        e.stopPropagation();
    }

    function removeSearchBox() {
        const searchBox = document.querySelector('.search-box');
        if (searchBox !== null) {
            searchBox.remove();
        }
    }

    //close popup
    const popup = document.querySelector('.match-close');
    popup.addEventListener('click', () => {
        matchDisplay.classList.add('d-none');
    })

    //open popup and binding data to popup
    const matchBoxList = document.querySelectorAll('.match-box');
    matchBoxList.forEach(element => {
        element.addEventListener('click', () => {

            matchDisplay.classList.remove('d-none');
        })
    });

    //Handle start popup
    const startBtn = document.querySelector('.start-btn');
    const startPopup = document.querySelector('.start-display');
    const startCloseBtn = document.querySelector('.start-close');
    const startOkBtn = document.querySelector('.ok-start');
    const startCancleBtn = document.querySelector('.cancle-start');
    const startTour = document.querySelector('.start-tour');

    startBtn.addEventListener('click', () => {
        startPopup.classList.remove('d-none');
    });

    startCloseBtn.addEventListener('click', () => {
        startPopup.classList.add('d-none');
    });

    startCancleBtn.addEventListener('click', () => {
        startPopup.classList.add('d-none');
    });

    startOkBtn.addEventListener('click', () => {
        startTour.classList.add('d-none');
        startPopup.classList.add('d-none');
    })

    //Handle click table
    function handleClickTable() {
        const tableList = document.querySelectorAll('.table-name .player-name');
        tableList.forEach(table => {
            table.addEventListener('click', () => {
                let tableName = table.textContent;
                const parent3 = table.parentNode.parentNode.parentNode;
                const parent2 = table.parentNode.parentNode;
                if (parent2.classList.contains('open-table')) {
                    const nameInput = parent3.querySelector('.table-name');
                    nameInput.textContent = tableName;
                    const scheduleTable = document.querySelector('.schedule-table');
                    var scheduleParent = scheduleTable.parentNode.parentNode;
                    scheduleParent.classList.add('d-none');

                    var removeOpen = document.createElement('div');
                    removeOpen.classList.add('cancle-table', 'open');

                    var removeIcon = document.createElement('i');
                    removeIcon.classList.add('fa-solid', 'fa-xmark');
                    removeOpen.appendChild(removeIcon);

                    parent3.appendChild(removeOpen);

                    removeOpen.addEventListener('click', () => {
                        nameInput.textContent = 'Chọn bàn';
                        scheduleParent.classList.remove('d-none');
                        parent3.removeChild(removeOpen);
                        removeBtnSaveAndStart();
                    })

                    saveBtn.classList.add('d-none');
                    startMatchBtn.classList.remove('d-none');
                } else {
                    const nameInput = parent3.querySelector('.table-name');
                    nameInput.textContent = tableName;
                    const openTable = document.querySelector('.open-table');
                    var openParent = openTable.parentNode;
                    openParent.classList.add('d-none');

                    var removeSchedule = document.createElement('div');
                    removeSchedule.classList.add('cancle-table', 'schedule');

                    var removeIcon = document.createElement('i');
                    removeIcon.classList.add('fa-solid', 'fa-xmark');
                    removeSchedule.appendChild(removeIcon);

                    parent3.appendChild(removeSchedule);

                    removeSchedule.addEventListener('click', () => {
                        nameInput.textContent = 'Chọn bàn';
                        openParent.classList.remove('d-none');
                        parent3.removeChild(removeSchedule);
                        removeBtnSaveAndStart();
                    })

                    saveBtn.classList.remove('d-none');
                    startMatchBtn.classList.add('d-none');
                }
            });
        });
    }

    const playingElement = document.querySelectorAll('.playing-element');
    const startMatchBtn = document.querySelector('.start-match-btn');
    const saveBtn = document.querySelector('.save-btn');

    removeBtnSaveAndStart();
    function removeBtnSaveAndStart() {
        startMatchBtn.classList.add('d-none');
        saveBtn.classList.add('d-none');
    }

    startMatchBtn.addEventListener('click', () => {
        playingElement.forEach(element => {
            element.classList.remove('d-none');
        })
        startMatchBtn.classList.add('d-none');
        saveBtn.classList.remove('d-none');
        const removeOpen = document.querySelector('.cancle-table');
        removeOpen.classList.add('d-none');
    })

    playingElement.forEach(element => {
        element.classList.add('d-none');
    })

    // binding dữ liệu
    function bindingData() {
        var tourId = $(".tourId").text().trim();
        $.ajax({
            url: 'https://localhost:5000/api/MatchOfTour/GetMatchForBracket',
            method: 'GET',
            data: { tourId: tourId },
            success: function (data) {
                imgList.forEach(img => {
                    img.classList.remove('d-none');
                });
                var matches = data;
                matches.forEach(function (match) {
                    var count = match.MatchNumber;
                    var player1Name = match.P1Name;
                    var player2Name = match.P2Name;
                    var player1Score = match.P1Score;
                    var player2Score = match.P2Score;
                    var tableNumber = match.TableNumber;
                    var raceToNumber = match.RaceToNumber;
                    var winMatchNumber = match.WinNextMatch;
                    var loseMatchNumber = match.LoseNextMatch;

                    // Find the corresponding match box element by ID
                    var matchBox = document.getElementById('match' + count);
                    if (matchBox) {
                        // Update the inner HTML of the elements with new data
                        matchBox.querySelector('.player1-name').innerText = player1Name;
                        matchBox.querySelector('.player2-name').innerText = player2Name;
                        matchBox.querySelector('.player1-score').innerText = player1Score;
                        matchBox.querySelector('.player2-score').innerText = player2Score;
                        matchBox.querySelector('.table-number').innerText = tableNumber;
                        matchBox.querySelector('.raceTo-number').innerText = raceToNumber;
                        matchBox.querySelector('.win-match-number').innerText = winMatchNumber;
                        matchBox.querySelector('.lose-match-number').innerText = loseMatchNumber;

                        // Update the player IDs (assuming they are hidden with "d-none" class)
                        var player1IdElements = matchBox.getElementsByClassName('player1-id');
                        var player2IdElements = matchBox.getElementsByClassName('player2-id');
                        if (player1IdElements.length > 0) {
                            player1IdElements[0].innerText = match.P1Id;
                        }
                        if (player2IdElements.length > 0) {
                            player2IdElements[0].innerText = match.P2Id;
                        }
                    }
                });
            },
            error: function (xhr, textStatus, errorThrown) {
                console.log('Error:', errorThrown);
            }
        });
    }

</script>

<script>

    const controlBtns = document.querySelectorAll('.control-btn');
    const ractTo = document.getElementById('race-to');
    const popupFinish = document.getElementById('confirm-popup');
    const firstDown = document.getElementById('first-down-btn');
    const secondDown = document.getElementById('second-down-btn');
    const selectBoxList = document.querySelectorAll('.player-status select');
    var raceToNumber = parseInt(ractTo.textContent);
    var totalScoreNumber = 0;

    controlBtns.forEach(controlBtn => {
        controlBtn.addEventListener('click', () => {
            const parent = controlBtn.parentNode;
            var score = parent.querySelector('.point-view');
            var scoreNumber = score.textContent;
            var playerTag = 0;

            if (parent.classList.contains('first-player')) {
                playerTag = 1;
            } else {
                playerTag = 2;
            }

            if (controlBtn.classList.contains('up')) {
                if (parseInt(scoreNumber) < (raceToNumber - 1)) {
                    score.textContent = parseInt(scoreNumber) + 1;
                    updateScore();
                    updateMark(2, playerTag);
                    onOffDownBtn();
                }
                if (parseInt(scoreNumber) + 1 === raceToNumber) {
                    popupFinish.classList.remove('d-none');
                    matchDisplay.classList.add('d-none');
                    popupFinish.querySelector('.exit-btn').addEventListener('click', () => {
                        popupFinish.classList.add('d-none');
                        matchDisplay.classList.remove('d-none');
                        popupFinish.querySelector('.save-random').removeEventListener('click', finishMatch);
                    })
                    popupFinish.querySelector('.save-random').addEventListener('click', finishMatch);
                    function finishMatch() {
                        matchDisplay.classList.remove('d-none');
                        controlBtns.forEach(btn => {
                            btn.classList.add('d-none');
                        })
                        popupFinish.classList.add('d-none');
                        score.textContent = parseInt(scoreNumber) + 1;
                        updateScore();
                        updateMark(2, playerTag);
                        updateScoreEachTable();

                        parent.parentNode.parentNode.classList.add('win');
                        document.querySelectorAll('.player-score.detail').forEach(player => {
                            if (!player.classList.contains('win')) {
                                player.classList.add('lose');
                            }
                        })
                        removeEmptyScoreTable();
                        saveBtn.classList.add('d-none');
                        selectBoxList.forEach(btn => {
                            btn.disabled = true;
                        })
                    }
                }
            } else if (controlBtn.classList.contains('down') && parseInt(scoreNumber) > 0) {
                score.textContent = parseInt(scoreNumber) - 1;
                updateMark(1, playerTag);
                updateScore();
                onOffDownBtn();
            }
            updateScoreEachTable();
        })
    })

    updateScore();
    function updateScore() {
        const firstScore = document.querySelector('.point-view.first');
        const secondScore = document.querySelector('.point-view.second');

        var firstScoreNumber = parseInt(firstScore.textContent);
        var secondScoreNumber = parseInt(secondScore.textContent);
        totalScoreNumber = firstScoreNumber + secondScoreNumber;
    }

    onOffDownBtn();
    function onOffDownBtn() {
        if (totalScoreNumber > 0) {
            const setBox = document.getElementById('set-' + totalScoreNumber);
            const firstMark = setBox.querySelector('.first-mark');
            const secondMark = setBox.querySelector('.second-mark');

            if (firstMark.querySelector('i') !== null) {
                firstDown.classList.remove('disable');
            } else {
                firstDown.classList.add('disable');
            }

            if (secondMark.querySelector('i') !== null) {
                secondDown.classList.remove('disable');
            } else {
                secondDown.classList.add('disable');
            }
        } else {
            firstDown.classList.add('disable');
            secondDown.classList.add('disable');
        }
    }

    function updateMark(controlTag, playerTag) {
        if (totalScoreNumber > 0) {
            const setBox = document.getElementById('set-' + totalScoreNumber);
            if (controlTag === 1) {
                if (playerTag === 1) {
                    setBox.querySelector('.first-mark').innerHTML =
                        '<span>&nbsp;</span>';
                } else if (playerTag === 2) {
                    setBox.querySelector('.second-mark').innerHTML =
                        '<span>&nbsp;</span>';
                }
            } else {
                if (playerTag === 1) {
                    setBox.querySelector('.first-mark').innerHTML =
                        '<span><i class="fa-solid fa-xmark">';
                } else if (playerTag === 2) {
                    setBox.querySelector('.second-mark').innerHTML =
                        '<span><i class="fa-solid fa-xmark">';
                }
            }
        }
    }

    const detailScoreList = document.querySelectorAll('.detail-score');
    removeEmptyScoreTable();
    function removeEmptyScoreTable() {
        if (document.querySelector('.player-score.detail').classList.contains('win')
            || document.querySelector('.player-score.detail').classList.contains('lose')) {
            var maxSetNumber = 0;
            for (var i = (detailScoreList.length - 1); i > totalScoreNumber; i--) {
                if (i % 15 === 1) {
                    const setBox = document.getElementById('set-' + i);
                    const firstMark = setBox.querySelector('.first-mark');
                    const secondMark = setBox.querySelector('.second-mark');

                    console.log(firstMark.querySelector('i'))
                    if (firstMark.querySelector('i') === null
                        && secondMark.querySelector('i') === null) {
                        setBox.parentNode.remove();
                    }
                    maxSetNumber = i;
                }
            }

            for (var i = totalScoreNumber + 1; i < maxSetNumber; i++) {
                const setBox = document.getElementById('set-' + i);
                setBox.innerHTML = '<div class="round-score board-line"><span>&nbsp;</span></div>'
                    + '<div class="board-line first-mark"><span>&nbsp;</i></span></div>'
                    + '<div class="second-mark"><span>&nbsp;</span></div>';
            }
        }
    }

    updateScoreEachTable();
    function updateScoreEachTable() {
        const scoreBoardList = document.querySelectorAll('.score-board');
        var countWinFisrtLine;
        var countWinSecondLine;
        scoreBoardList.forEach(scoreBoard => {
            countWinFisrtLine = 0;
            countWinSecondLine = 0;
            const firstTotal = scoreBoard.querySelector('.first-total-score');
            const secondTotal = scoreBoard.querySelector('.second-total-score');
            const detailScoreList = scoreBoard.querySelectorAll('.detail-score');
            detailScoreList.forEach(detailScore => {
                if (detailScore.querySelector('.first-mark').querySelector('i') !== null) {
                    countWinFisrtLine++;
                } else if (detailScore.querySelector('.second-mark').querySelector('i') !== null) {
                    countWinSecondLine++;
                }
            })
            firstTotal.textContent = countWinFisrtLine;
            secondTotal.textContent = countWinSecondLine;
        })
    }


</script>