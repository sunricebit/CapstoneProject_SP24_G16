@{
    Layout = "~/Views/Shared/_BackBtnLayout.cshtml";
}

<div class="container-full">
    <div class="random-round">
        <div class="">
            <div class="players-header">
                Hệ thống ngẫu nhiên
            </div>
            <div class="system-random">
                <div class="container-bracket mt-0">
                    <div class="bracket-tab">
                        <div class="bracket-content d-flex justify-content-center" style="top:50px">
                            <div id="winer-match-body"></div>
                        </div>
                    </div>
                    <div class="zoom-btns">
                        <div class="screen-size">
                            <button class="zoom-in" onclick="fullScreen()">
                                <i class="fa-solid fa-expand"></i>
                            </button>
                        </div>
                        <div>
                            <button id="zoom-in" class="zoom-in" onclick="zoomIn()">
                                <i class="fa-solid fa-plus"></i>
                            </button>
                        </div>
                        <div>
                            <button id="zoom-out" class="zoom-out" onclick="zoomOut()">
                                <i class="fa-solid fa-minus"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="random-btn-group row mx-0">
                <div class="random-btn col-4">
                    <i class="fa-solid fa-shuffle"></i>
                </div>
                <div class="players-note save col-8">
                    <i class="fa-solid fa-floppy-disk px-2"></i>
                    <span style="font-size: 20px;">Lưu và xem sơ đồ đấu</span>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="confirm-popup d-none">
    <div class="confirm-content">
        <div class="confirm-title">
            Kết quả của bạn vẫn chưa được lưu!
        </div>
        <div class="d-flex justify-content-around">
            <div class="exit-btn">
                <i class="fa-solid fa-circle-xmark"></i>
                Vẫn thoát
            </div>
            <div class="save-random">
                <i class="fa-solid fa-floppy-disk"></i>
                Ở lại trang
            </div>
        </div>
    </div>
</div>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
    const winMatchBody = document.getElementById('winer-match-body');
    //Số lượng người chơi tham gia giải
    const playerNumber = 128;
    //Số vòng đấu nhánh thắng trước vòng chung kết
    //(tính theo đấu loại đơn)
    let roundNumber = Math.log2(playerNumber / 2);
    //Số người chơi vào vòng loại trực tiếp
    const finalSinglePlayer = 2;
    //số vòng đấu nhánh thắng tính từ R2 -> R(cuối) vòng loại
    let finalSingleRound = roundNumber - Math.log2(finalSinglePlayer) + 1;
    //chiều rộng,cao của match
    var width = 250;
    var height = 60;
    // khoảng cách chiều ngang giữa 2 match
    var matchDistance = 30;
    var leftRightSpace = 100;
    let numberMatchEachRound = 0;
    let count = 0;
    var winBody = '';

    for (i = 0; i <= finalSingleRound; i++) {
        numberMatchEachRound = 2 ** (roundNumber - i);
        for (j = 0; j < numberMatchEachRound; j++) {
            if (i == 0) {
                ++count;
                winBody += '<div class="match-box" id="match' + count + '" style=" top:' + (j * 2 * height) + 'px;width: ' + width + 'px; height: ' + height + 'px;">'
                    + '<div class="match-content row">'
                    + '<div class="match-number col-2 p-0 text-center">'
                    + count
                    + '</div>'
                    + '<div class="player-match col-8">'
                    + '<div class="d-flex justify-content-start align-items-center">'
                    + '<img src="Image/VietNamFlag.png"/>'
                    + '<!-- 15 char -->'
                    + '<div class="player-name">Vũ Hoài Nam</div>'
                    + '</div>'
                    + '<div class="d-flex justify-content-start align-items-center">'
                    + '<img src="Image/VietNamFlag.png"/>'
                    + '<!-- 15 char -->'
                    + '<div class="player-name">Vũ Hữu Quảng</div>'
                    + '</div>'
                    + '</div>'
                    + '<div class="col-2">'
                    + '<div class="match-score">6</div>'
                    + '<div class="match-score">6</div>'
                    + '</div>'
                    + '<div class="match-table">Table <span class="table-number">99</span></div>'
                    + '<div class="match-raceTo">Race to <span class="raceTo-number">99</span></div>'
                    + '<div class="next-match d-flex">'
                    + '<div class="next-win">W: <span class="win-match-number">123</span>,</div>'
                    + '<div class="next-lose">L: <span class="lose-match-number">111</span></div>'
                    + '</div>'
                    + '</div>'
                    + '</div>'
            } else {
                ++count;
                winBody +=
                    '<div class="line" style="top: ' + (height * (((2 ** i - 1) / 2) + (2 ** (i + 1) * j))) + 'px; left:' + (width * i + matchDistance * (i - 1)) + 'px">'
                    + '<div class="left-line-win" style="width: ' + matchDistance / 2 + 'px; height: ' + ((2 ** i) * height) + 'px;"></div>'
                    + '<div class="right-line-win" style="width: ' + matchDistance / 2 + 'px; height: ' + ((2 ** i) * height / 2) + 'px;"></div>'
                    + '</div>'
                    + '<div class="match-box" id="match' + count + '" style="top:' + (height * ((2 ** i - 1) + 2 ** (i + 1) * j)) + 'px; left: ' + ((matchDistance + width) * i) + 'px;width: ' + width + 'px; height: ' + height + 'px;">'
                    + '<div class="match-content row">'
                    + '<div class="match-number col-2 p-0 text-center">'
                    + count
                    + '</div>'
                    + '<div class="player-match col-8">'
                    + '<div class="d-flex justify-content-start align-items-center">'
                    + '<img src="Image/VietNamFlag.png"/>'
                    + '<!-- 15 char -->'
                    + '<div class="player-name">Vũ Hoài Nam</div>'
                    + '</div>'
                    + '<div class="d-flex justify-content-start align-items-center">'
                    + '<img src="Image/VietNamFlag.png"/>'
                    + '<!-- 15 char -->'
                    + '<div class="player-name">Vũ Hữu Quảng</div>'
                    + '</div>'
                    + '</div>'
                    + '<div class="col-2">'
                    + '<div class="match-score">6</div>'
                    + '<div class="match-score">6</div>'
                    + '</div>'
                    + '<div class="match-table">Table <span class="table-number">99</span></div>'
                    + '<div class="match-raceTo">Race to <span class="raceTo-number">99</span></div>'
                    + '<div class="next-match d-flex">'
                    + '<div class="next-win">W: <span class="win-match-number">123</span>,</div>'
                    + '<div class="next-lose">L: <span class="lose-match-number">111</span></div>'
                    + '</div>'
                    + '</div>'
                    + '</div>'
            }
        }
    }

    winMatchBody.innerHTML = winBody;

    const lastMatchHeight = document.getElementById('match' + playerNumber / 2);
    const lastMatchRect = lastMatchHeight.getBoundingClientRect();
    const matchTableElement = lastMatchHeight.querySelector('.match-raceTo');
    matchTableElement.style.paddingBottom = '200px';

    let winerWidth;
    let loserWidth;

    window.addEventListener('load', centerPosition);

    function centerPosition() {
        bracketTab.scrollLeft = lastMatchRect.left + width;
    }

    let currentZoom = 0.5;



    const bracketContent = document.querySelector('.bracket-content');
    const bracketTab = document.querySelector('.bracket-tab');
    const zoomInBtn = document.getElementById('zoom-in');
    const zoomOutBtn = document.getElementById('zoom-out');

    zoomInBtn.removeEventListener
    applyZoom();
    function zoomIn() {
        if (currentZoom <= 1.5) {
            currentZoom += 0.1;
            applyZoom();
            zoomOutBtn.style.opacity = '1';
            zoomOutBtn.classList.remove('no-hover');
        } else {
            zoomInBtn.style.opacity = '0.3';
            zoomInBtn.classList.add('no-hover');
        }
    }

    function zoomOut() {
        if (currentZoom >= 0.4) {
            currentZoom -= 0.1;
            applyZoom();
            zoomInBtn.style.opacity = '1';
            zoomInBtn.classList.remove('no-hover');
        } else {
            zoomOutBtn.style.opacity = '0.3';
            zoomOutBtn.classList.add('no-hover');
        }
    }

    function applyZoom() {
        winerWidth = ((roundNumber + 2) * width + (roundNumber + 0.5) * matchDistance) * currentZoom + leftRightSpace;
        loserWidth = (finalSingleRound * (2 * width + 1.5 * matchDistance)) * currentZoom + leftRightSpace;
        winMatchBody.style.width = winerWidth + 'px';
        bracketContent.style.width = 0.5 * winerWidth + loserWidth + 'px';
        bracketContent.style.transform = `scale(${currentZoom})`;
        centerPosition();
    }


    const matchDisplay = document.querySelector('.match-display');
    function scrollToElement(elementId) {
        matchDisplay.classList.add('d-none');

        // Get the element to scroll to by its ID
        const elementToScrollTo = document.getElementById('match' + elementId);
        const elementRect = elementToScrollTo.getBoundingClientRect();
        const parentRect = bracketContent.getBoundingClientRect();

        let distanceToLeft = elementRect.x - parentRect.x - window.innerWidth / 2 + 125;
        let distanceToTop = elementRect.top - parentRect.top - window.innerHeight / 4;

        bracketTab.scrollTo({
            left: distanceToLeft,
            top: distanceToTop,
            behavior: 'smooth'
        });

        flashingBox(elementToScrollTo);
    }

    function flashingBox(element) {
        let count = 0;
        element.classList.add('flashing');
        const interval = setInterval(() => {
            if (count < 3) {
                if (element.classList.contains('flashing')) {
                    element.classList.remove('flashing');
                } else {
                    element.classList.add('flashing');
                    count++;
                }
            } else {
                clearInterval(interval);
            }
        }, 300);
        setTimeout(() => {
            element.classList.remove('flashing');
        }, 3500);
    }

    //Handle full screen
    const containerBracket = document.querySelector('.container-bracket');
    const header = document.querySelector('header');
    const screenSize = document.querySelector('.screen-size');
    const body = document.querySelector('body');

    function fullScreen() {
        containerBracket.classList.add('full-screen');
        screenSize.innerHTML = '<button class="zoom-in" onclick="minimized()">'
            + '<i class="fa-solid fa-compress"></i>'
            + '</button>';
        header.classList.add('d-none');

        if (body.requestFullscreen) {
            body.requestFullscreen();
        } else if (body.webkitRequestFullscreen) { /* Safari */
            body.webkitRequestFullscreen();
        } else if (body.msRequestFullscreen) { /* IE11 */
            body.msRequestFullscreen();
        }
    }

    function minimized() {
        containerBracket.classList.remove('full-screen');
        screenSize.innerHTML = '<button class="zoom-in" onclick="fullScreen()">'
            + '<i class="fa-solid fa-expand"></i>'
            + '</button>';
        header.classList.remove('d-none');

        if (document.exitFullscreen) {
            document.exitFullscreen();
        } else if (document.webkitExitFullscreen) { /* Safari */
            document.webkitExitFullscreen();
        } else if (document.msExitFullscreen) { /* IE11 */
            document.msExitFullscreen();
        }
    }


</script>