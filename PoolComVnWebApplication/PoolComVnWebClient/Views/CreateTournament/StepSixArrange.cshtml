@{
    Layout = "~/Views/Shared/_CreateTournamentLayout.cshtml";
    int tourId = ViewBag.TourId;
}

<div class="container-full">
    <div class="create-tour d-flex justify-content-end">
        <div class="create-tour-display col-lg-10 py-0">
            <div class="create-step-five">
                <div class="display-title d-flex justify-content-between">
                    <div>Sơ đồ đấu</div>
                    <div class="d-flex align-items-center">
                        <div class="step-two-nav arrange-btn">
                            Sắp xếp
                            <div class="arrange-menu">
                                <a href="@Url.Action("SystemRandom", "CreateTournament", new {tourId = tourId})">Hệ thống ngẫu nhiên</a>
                                <a href="@Url.Action("UserRandom", "CreateTournament", new {tourId = tourId})">Người dùng ngẫu nhiên</a>
                                @*<a href="@Url.Action("UserCustom", "CreateTournament")">Người dùng tùy chỉnh</a>*@
                            </div>
                        </div>
                    </div>
                </div>
                <div class="display-content m-0">
                    <div class="container-bracket mt-0">
                        <div class="bracket-tab">
                            <div class="bracket-content d-flex" style="top:50px">
                                <div id="loser-match-body"></div>
                                <div id="winer-match-body"></div>
                            </div>
                        </div>
                        <div class="zoom-btns">
                            <div class="screen-size">
                                <button class="zoom-in" onclick="fullScreen()">
                                    <i class="fa-solid fa-expand"></i>
                                </button>
                            </div>
                            <div>
                                <button id="zoom-in" class="zoom-in" onclick="zoomIn()">
                                    <i class="fa-solid fa-plus"></i>
                                </button>
                            </div>
                            <div>
                                <button id="zoom-out" class="zoom-out" onclick="zoomOut()">
                                    <i class="fa-solid fa-minus"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>

    const winMatchBody = document.getElementById('winer-match-body');
    var width = 250;
    var height = 60;
    var matchDistance = 30;
    var leftRightSpace = 100;
    let numberMatchEachRound = 0;
    let count = 0;
    var winBody = '';
    var imgList;

    $(document).ready(function () {
        var urlParams = new URLSearchParams(window.location.search);
        var tourId = urlParams.get('tourId');
        // Gọi AJAX khi trang được tải
        $.ajax({
            url: 'https://localhost:5000/api/Tournament/GetTourInfo',
            method: 'GET',
            data: { tourId: tourId },
            success: function (data) {
                // Gán giá trị cho playerNumber và finalSinglePlayer từ dữ liệu nhận được
                var playerNumber = data.playerNumber;
                var finalSinglePlayer = data.finalSinglePlayer;

                let roundNumber = Math.log2(playerNumber / 2);
                let finalSingleRound = roundNumber - Math.log2(finalSinglePlayer) + 1;

                console.log('playerNumber:', playerNumber);
                console.log('finalSinglePlayer:', finalSinglePlayer);
                for (i = 0; i <= finalSingleRound; i++) {
                    numberMatchEachRound = 2 ** (roundNumber - i);
                    for (j = 0; j < numberMatchEachRound; j++) {
                        if (i == 0) {
                            ++count;
                            winBody += '<div class="match-box have-data" id="match' + count + '" style=" top:' + (j * 2 * height) + 'px;width: ' + width + 'px; height: ' + height + 'px;">'
                                + '<div class="match-content row">'
                                + '<div class="match-number col-2 p-0 text-center">'
                                + count
                                + '</div>'
                                + '<div class="player-match col-10">'
                                + '<div class="d-flex justify-content-start align-items-center">'
                                + '<img src=""/>'
                                + '<!-- 15 char -->'
                                + '<div class="player-name"></div>'
                                + '<div class="player-id d-none"></div>'
                                + '</div>'
                                + '<div class="d-flex justify-content-start align-items-center">'
                                + '<img src=""/>'
                                + '<!-- 15 char -->'
                                + '<div class="player-name"></div>'
                                + '<div class="player-id d-none"></div>'
                                + '</div>'
                                + '</div>'
                                + '</div>'
                                + '</div>'
                        } else {
                            ++count;
                            winBody +=
                                '<div class="line" style="top: ' + (height * (((2 ** i - 1) / 2) + (2 ** (i + 1) * j))) + 'px; left:' + (width * i + matchDistance * (i - 1)) + 'px">'
                                + '<div class="left-line-win" style="width: ' + matchDistance / 2 + 'px; height: ' + ((2 ** i) * height) + 'px;"></div>'
                                + '<div class="right-line-win" style="width: ' + matchDistance / 2 + 'px; height: ' + ((2 ** i) * height / 2) + 'px;"></div>'
                                + '</div>'
                                + '<div class="match-box" id="match' + count + '" style="top:' + (height * ((2 ** i - 1) + 2 ** (i + 1) * j)) + 'px; left: ' + ((matchDistance + width) * i) + 'px;width: ' + width + 'px; height: ' + height + 'px;">'
                                + '<div class="match-content row">'
                                + '<div class="match-number col-2 p-0 text-center">'
                                + count
                                + '</div>'
                                + '<div class="player-match col-10">'
                                + '<div class="d-flex justify-content-start align-items-center">'
                                + '</div>'
                                + '<div class="d-flex justify-content-start align-items-center">'
                                + '</div>'
                                + '</div>'
                                + '</div>'
                                + '</div>'
                        }
                    }
                }

                const loseMatchBody = document.getElementById('loser-match-body');
                var loseBody = '';
                for (i = 1; i <= finalSingleRound; i++) {
                    numberMatchEachRound = 2 ** (roundNumber - i);
                    for (j = 0; j < numberMatchEachRound; j++) {
                        ++count;
                        loseBody +=
                            '<div class="line" style="top: ' + (height * (((2 ** i - 1) / 2) + (2 ** (i + 1) * j))) + 'px; right:' + ((i - 1) * (1.5 * matchDistance + 2 * width)) + 'px">'
                            + '<div class="left-line-lose" style="width: ' + matchDistance / 2 + 'px; height: ' + ((2 ** i) * height / 2) + 'px;"></div>'
                            + '<div class="right-line-lose" style="width: ' + matchDistance / 2 + 'px; height: ' + ((2 ** i) * height) + 'px;"></div>'
                            + '</div>'
                            + '<div class="match-box" id="match' + count + '" style="top:' + (height * ((2 ** i - 1) + 2 ** (i + 1) * j)) + 'px; right: ' + ((1.5 * i - 0.5) * matchDistance + 2 * (i - 1) * width) + 'px;width: ' + width + 'px; height: ' + height + 'px;">'
                            + '<div class="match-content row">'
                            + '<div class="match-number col-2 p-0 text-center">'
                            + count
                            + '</div>'
                            + '<div class="player-match col-10">'
                            + '<div class="d-flex justify-content-start align-items-center">'
                            + '</div>'
                            + '<div class="d-flex justify-content-start align-items-center">'
                            + '</div>'
                            + '</div>'
                            + '</div>'
                            + '</div>'
                    }
                    for (j = 0; j < numberMatchEachRound; j++) {
                        ++count;
                        loseBody +=
                            '<div class="between-line" style="top: ' + (height * (((2 ** i - 1) / 2) + (2 ** (i + 1) * j))) + 'px; right:' + ((1.5 * i - 0.5) * matchDistance + (2 * i - 1) * width) + 'px; width: ' + matchDistance / 2 + 'px; height: ' + ((2 ** i) * height / 2) + 'px;"></div>'
                            + '<div class="match-box" id="match' + count + '" style="top: ' + (height * ((2 ** i - 1) + 2 ** (i + 1) * j)) + 'px; right: ' + ((matchDistance * 1.5 * i + width * (2 * i - 1))) + 'px;width: ' + width + 'px; height: ' + height + 'px;">'
                            + '<div class="match-content row">'
                            + '<div class="match-number col-2 p-0 text-center">'
                            + count
                            + '</div>'
                            + '<div class="player-match col-10">'
                            + '<div class="d-flex justify-content-start align-items-center">'
                            + '</div>'
                            + '<div class="d-flex justify-content-start align-items-center">'
                            + '</div>'
                            + '</div>'
                            + '</div>'
                            + '</div>'
                    }
                }
                loseMatchBody.innerHTML = loseBody;

                for (i = finalSingleRound; i <= roundNumber; i++) {
                    numberMatchEachRound = 2 ** (roundNumber - i);
                    if (i === finalSingleRound) {
                        for (j = 0; j < numberMatchEachRound; j++) {
                            ++count;
                            winBody +=
                                '<div class="line" style="top: ' + (height * (((2 ** i - 1) / 2) + (2 ** (i + 1) * j))) + 'px; left:' + (width * (i + 1) + matchDistance * i) + 'px">'
                                + '<div class="right-line-win" style="width: ' + matchDistance / 2 + 'px; height: ' + ((2 ** i) * height / 2) + 'px;"></div>'
                                + '</div>'
                                + '<div class="match-box" id="match' + count + '" style="top:' + (height * ((2 ** i - 1) + 2 ** (i + 1) * j)) + 'px; left: ' + (matchDistance * (i + 0.5) + width * (i + 1)) + 'px;width: ' + width + 'px; height: ' + height + 'px;">'
                                + '<div class="match-content row">'
                                + '<div class="match-number col-2 p-0 text-center">'
                                + count
                                + '</div>'
                                + '<div class="player-match col-10">'
                                + '<div class="d-flex justify-content-start align-items-center">'
                                + '</div>'
                                + '<div class="d-flex justify-content-start align-items-center">'
                                + '</div>'
                                + '</div>'
                                + '</div>'
                                + '</div>'
                        }
                    } else {
                        for (j = 0; j < numberMatchEachRound; j++) {
                            ++count;
                            winBody +=
                                '<div class="line" style="top: ' + (height * (((2 ** i - 1) / 2) + (2 ** (i + 1) * j))) + 'px; left:' + (width * (i + 1) + matchDistance * (i - 0.5)) + 'px">'
                                + '<div class="left-line-win" style="width: ' + matchDistance / 2 + 'px; height: ' + ((2 ** i) * height) + 'px;"></div>'
                                + '<div class="right-line-win" style="width: ' + matchDistance / 2 + 'px; height: ' + ((2 ** i) * height / 2) + 'px;"></div>'
                                + '</div>'
                                + '<div class="match-box" id="match' + count + '" style="top:' + (height * ((2 ** i - 1) + 2 ** (i + 1) * j)) + 'px; left: ' + (matchDistance * (i + 0.5) + width * (i + 1)) + 'px;width: ' + width + 'px; height: ' + height + 'px;">'
                                + '<div class="match-content row">'
                                + '<div class="match-number col-2 p-0 text-center">'
                                + count
                                + '</div>'
                                + '<div class="player-match col-10">'
                                + '<div class="d-flex justify-content-start align-items-center">'
                                + '</div>'
                                + '<div class="d-flex justify-content-start align-items-center">'
                                + '</div>'
                                + '</div>'
                                + '</div>'
                                + '</div>'
                        }
                    }
                }

                winMatchBody.innerHTML = winBody;
                imgList = document.querySelector('.bracket-tab').querySelectorAll('img');
                imgList.forEach(img => {
                    img.classList.add('d-none');
                });
                const lastMatchHeight = document.getElementById('match' + playerNumber / 2);
                window.addEventListener('load', centerPosition);

                let currentZoom = 0.5;

                let winerWidth;
                let loserWidth;

                const bracketContent = document.querySelector('.bracket-content');
                const bracketTab = document.querySelector('.bracket-tab');
                const zoomInBtn = document.getElementById('zoom-in');
                const zoomOutBtn = document.getElementById('zoom-out');

                zoomInBtn.addEventListener('click', zoomIn);
                zoomOutBtn.addEventListener('click', zoomOut);

                zoomInBtn.removeEventListener
                applyZoom();



                const header = document.querySelector('header');
                const body = document.querySelector('body');
                const screenSize = document.querySelector('.screen-size');
                const playersHeader = document.querySelector('.players-header');
                const systemRandom = document.querySelector('.system-random');
                const randomBtnGroup = document.querySelector('.random-btn-group');
                var fullScreenBtn = document.getElementById('full-screen');
                var miniScreenBtn;

                if (fullScreenBtn !== null) {
                    fullScreenBtn.addEventListener('click', fullScreen);
                }


                function centerPosition() {
                    bracketTab.scrollLeft = loseMatchBody.offsetWidth - window.innerWidth / 2 + 200;
                }

                function zoomIn() {
                    if (currentZoom <= 1.5) {
                        currentZoom += 0.1;
                        applyZoom();
                        zoomOutBtn.style.opacity = '1';
                        zoomOutBtn.classList.remove('no-hover');
                    } else {
                        zoomInBtn.style.opacity = '0.3';
                        zoomInBtn.classList.add('no-hover');
                    }
                }

                function zoomOut() {
                    if (currentZoom >= 0.2) {
                        currentZoom -= 0.1;
                        applyZoom();
                        zoomInBtn.style.opacity = '1';
                        zoomInBtn.classList.remove('no-hover');
                    } else {
                        zoomOutBtn.style.opacity = '0.3';
                        zoomOutBtn.classList.add('no-hover');
                    }
                }

                function applyZoom() {
                    winerWidth = ((roundNumber + 2) * width + (roundNumber + 0.5) * matchDistance) * currentZoom + leftRightSpace;
                    loserWidth = (finalSingleRound * (2 * width + 1.5 * matchDistance)) * currentZoom + leftRightSpace;
                    winMatchBody.style.width = winerWidth + 'px';
                    loseMatchBody.style.width = loserWidth + 'px';
                    bracketContent.style.transform = `scale(${currentZoom})`;
                    centerPosition();
                }

                function fullScreen() {
                    systemRandom.classList.add('full-screen');
                    screenSize.innerHTML = '<button id="mini-screen" class="zoom-in">'
                        + '<i class="fa-solid fa-compress"></i>'
                        + '</button>';
                    miniScreenBtn = document.getElementById('mini-screen');
                    miniScreenBtn.addEventListener('click', minimized);

                    if (body.requestFullscreen) {
                        body.requestFullscreen();
                    } else if (body.webkitRequestFullscreen) { /* Safari */
                        body.webkitRequestFullscreen();
                    } else if (body.msRequestFullscreen) { /* IE11 */
                        body.msRequestFullscreen();
                    }

                    header.classList.add('d-none');
                    playersHeader.classList.add('d-none');
                    randomBtnGroup.classList.add('d-none');
                }

                function minimized() {
                    systemRandom.classList.remove('full-screen');
                    screenSize.innerHTML = '<button id="full-screen" class="zoom-in">'
                        + '<i class="fa-solid fa-expand"></i>'
                        + '</button>';
                    fullScreenBtn = document.getElementById('full-screen');
                    fullScreenBtn.addEventListener('click', fullScreen);

                    if (document.exitFullscreen) {
                        document.exitFullscreen();
                    } else if (document.webkitExitFullscreen) { /* Safari */
                        document.webkitExitFullscreen();
                    } else if (document.msExitFullscreen) { /* IE11 */
                        document.msExitFullscreen();
                    }

                    header.classList.remove('d-none');
                    playersHeader.classList.remove('d-none');
                    randomBtnGroup.classList.remove('d-none');
                }
            },
            error: function (xhr, textStatus, errorThrown) {
                console.log('Error:', errorThrown);
            }
        });
    });
</script>